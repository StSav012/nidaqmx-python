<%
    from codegen.utilities.function_helpers import get_all_functions,order_function_parameters_by_optional,get_all_parameter_signature
    from codegen.utilities.text_wrappers import wrap, docstring_wrap
    functions = get_all_functions(data)
%>\
# Do not edit this file; it was automatically generated.

class BaseInterpreter(object):
    """
    Contains signature of functions for all DAQmx APIs.
    """
################################################################################
## Script function signature.
################################################################################
% for func in functions:
    %if func.is_python_factory:
    @staticmethod
%endif
<%
    sorted_params = order_function_parameters_by_optional(func.base_parameters)
    parameter_signature = get_all_parameter_signature(is_python_factory, sorted_params)
    %>\
    %if (len(func.function_name) + len(parameter_signature)) > 68:
    def ${func.function_name}(
            ${parameter_signature + '):' | wrap(12, 12)}
    %else:
    def ${func.function_name}(${parameter_signature}):
    %endif
\
        pass

% endfor